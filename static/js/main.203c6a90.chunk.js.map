{"version":3,"sources":["components/common/CercleLoader.js","components/common/ContentCard.js","components/common/Dropdown.js","components/common/LineChart.js","components/currentWeather/CurrentWeather.js","components/extendedForecast/WeatherDay.js","components/extendedForecast/ExtendedForecast.js","utils/timeHandlers.js","views/WeatherView.js","apiRequest/WeatherData.js","App.js","index.js"],"names":["ContentLayout","styled","div","CercleLoader","className","ContentCard","props","isLoading","children","List","showList","items","length","Dropdown","initialValue","handleChange","useState","setShowList","selected","setSelected","useEffect","clickOutClose","document","getElementsByTagName","addEventListener","e","onClick","style","fontSize","map","item","i","key","value","label","_handleSelect","LineChart","data","initialState","labels","datasets","lineTension","backgroundColor","borderColor","borderDash","borderDashOffset","borderCapStyle","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","dataset","legend","display","CurrentWeather","weatherData","date","src","icon","alt","temp","description","max","min","wind_speed","humidity","graphData","WeatherDay","ExtendedForecast","dayData","moment","locale","formatedTime","unix","format","ViewLayout","WeatherView","locationWeather","setLocationWeather","setIsLoading","lat","lon","cityCoord","setCityCoord","isWide","useMediaLayout","minWidth","_getCurrentWeatherData","console","log","a","coord","fetch","then","res","json","formatedCurrentData","current","formatCurrentWeatherData","extended","formatExtendedWeatherData","dt","weather","daily","formatGraphData","hourly","slice","handleCityChange","AppLayout","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.203c6a90.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst CercleLoader = () => {\r\n  return <ContentLayout>\r\n    <div className=\"lds-ripple\"><div></div><div></div></div>\r\n  </ContentLayout>\r\n};\r\n\r\nconst ContentLayout = styled.div`\r\n\r\n  .lds-ripple {\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 80px;\r\n  height: 80px;\r\n  }\r\n\r\n  .lds-ripple div {\r\n    position: absolute;\r\n    border: 4px solid #fff;\r\n    opacity: 1;\r\n    border-radius: 50%;\r\n    animation: lds-ripple 1s cubic-bezier(0, 0.2, 0.8, 1) infinite;\r\n  }\r\n\r\n  .lds-ripple div:nth-child(2) {\r\n    animation-delay: -0.5s;\r\n  }\r\n\r\n  @keyframes lds-ripple {\r\n\r\n    0% {\r\n      top: 36px;\r\n      left: 36px;\r\n      width: 0;\r\n      height: 0;\r\n      opacity: 1;\r\n    }\r\n\r\n    100% {\r\n      top: 0px;\r\n      left: 0px;\r\n      width: 72px;\r\n      height: 72px;\r\n      opacity: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default CercleLoader;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n//components\r\nimport CercleLoader from './CercleLoader'\r\n\r\nconst ContentCard = props => {\r\n  const { isLoading } = props\r\n\r\n  return <ContentLayout {...props}>\r\n    {isLoading && <div className='is-loading'><CercleLoader /></div>}\r\n    {props.children}\r\n  </ContentLayout>\r\n};\r\n\r\nContentCard.propTypes = {\r\n  isLoading: PropTypes.bool\r\n}\r\n\r\nconst ContentLayout = styled.div`\r\n  position:relative;\r\n  border-radius:.5rem;\r\n  box-shadow: 2px 3px 13px -6px rgba(0,0,0,0.75);\r\n  padding:1rem;\r\n  box-sizing:border-box;\r\n  background-color:white;\r\n\r\n  .is-loading{\r\n    background-color:#80808040;\r\n    z-index:2;\r\n    width:100%;\r\n    height:100%;\r\n    position:absolute;\r\n    top:0;\r\n    left:0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    overflow: hidden;\r\n    border-radius: .5rem;\r\n  }\r\n`;\r\n\r\nexport default ContentCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n//icons\r\nimport { MdKeyboardArrowDown, MdKeyboardArrowUp } from 'react-icons/md';\r\n\r\nconst Dropdown = props => {\r\n  const { items, initialValue, handleChange } = props\r\n\r\n  //estados manejadores de display\r\n  const [showList, setShowList] = useState(false);\r\n  const [selected, setSelected] = useState(null);\r\n\r\n  useEffect(() => {\r\n    clickOutClose()\r\n    !initialValue && setSelected(items[0])\r\n  }, [initialValue, items]);\r\n\r\n  const clickOutClose = () => {\r\n    //event listener para cerrar el drop con un click afuera\r\n    const body = document.getElementsByTagName('body')[0]\r\n    body.addEventListener('click', e => setShowList(false))\r\n  };\r\n\r\n  const _handleSelect = item => {\r\n    handleChange(item.value)\r\n    setSelected(item.label)\r\n    setShowList(false)\r\n  };\r\n\r\n  return <ContentLayout items={items} showList={showList} >\r\n    <div className='controller' onClick={() => setShowList(!showList)}>\r\n      <div className='label-container'>\r\n        {selected || initialValue}\r\n      </div>\r\n      {\r\n        !showList ?\r\n          <MdKeyboardArrowDown\r\n            style={{\r\n              fontSize: '2rem'\r\n            }}\r\n          /> :\r\n          <MdKeyboardArrowUp\r\n            style={{\r\n              fontSize: '2rem'\r\n            }}\r\n          />\r\n      }\r\n    </div>\r\n    <List\r\n      items={items}\r\n      showList={showList}>\r\n      {\r\n        !!items &&\r\n        items.map((item, i) => <div\r\n          key={i}\r\n          className='item'\r\n          onClick={() => _handleSelect(item)}\r\n        >\r\n          {item.label}\r\n        </div>\r\n        )\r\n      }\r\n    </List>\r\n  </ContentLayout>\r\n};\r\n\r\nDropdown.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.object\r\n  ),\r\n  initialValue: PropTypes.string,\r\n  handleChange: PropTypes.func\r\n};\r\n\r\nconst ContentLayout = styled.div`\r\n  position: relative;\r\n  width:15rem;\r\n  font-size: .9rem;\r\n  \r\n  .controller{\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n\r\n  .label-container{\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n  }\r\n`;\r\n\r\nconst List = styled.div`\r\n  overflow:hidden;\r\n  width:100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  z-index: 1;\r\n  transition: height .3s;\r\n  position:absolute;\r\n  left: 0;\r\n  top: 3rem;\r\n  border-radius: .5rem;\r\n  box-shadow: 2px 3px 13px -6px rgba(0,0,0,0.75);;\r\n  background-color: white;\r\n  height: ${ ({ showList, items }) => showList ? `${items.length * 3}rem` : \"0px\"};\r\n  padding: ${ ({ showList }) => showList ? \"1rem 0\" : \"0\"};\r\n\r\n  .item{\r\n    min-height: 3rem;\r\n    cursor: pointer;\r\n    width: 100%;\r\n    padding-left: 1rem ;\r\n    display: flex;\r\n    align-items: center;\r\n      &:hover{\r\n      background-color: #F2542D;\r\n      color: white;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Dropdown;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst LineChart = props => {\r\n  const { data } = props\r\n\r\n  const initialState = {\r\n    labels: data ? data.labels : [],\r\n    datasets: [\r\n      {\r\n        label: 'Temperatura',\r\n        lineTension: 0.1,\r\n        backgroundColor: '#f2542d85',\r\n        borderColor: '#F2542D',\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderCapStyle: 'butt',\r\n        borderJoinStyle: 'miter',\r\n        pointBorderColor: '#F2542D',\r\n        pointBackgroundColor: '#fff',\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: '#F2542D',\r\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        data: data ? data.dataset : []\r\n      }\r\n    ]\r\n  };\r\n\r\n  return <ContentLayout>\r\n    <h3>Temperatura proximas 24hrs</h3>\r\n    <Line data={initialState} legend={{ display: false }} />\r\n  </ContentLayout>\r\n};\r\n\r\nconst ContentLayout = styled.div`\r\n  \r\n`;\r\n\r\nexport default LineChart;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n//icons\r\nimport { WiUmbrella, WiThermometer, WiThermometerExterior, WiStrongWind, WiHumidity } from 'react-icons/wi'\r\n//components\r\nimport LineChart from '../common/LineChart'\r\n\r\nconst CurrentWeather = props => {\r\n  const { weatherData } = props\r\n\r\n  return <ContentLayout>\r\n    <div className='current-container'>\r\n      <div className='current-date'>\r\n        {weatherData ? weatherData.date : '-'}\r\n      </div>\r\n      <img src={`http://openweathermap.org/img/wn/${weatherData ? weatherData.icon : '01n'}@2x.png`} alt='Icono del clima' />\r\n      <div className='current-temp'>\r\n        {weatherData ? weatherData.temp : 0}°C\r\n      </div>\r\n    </div>\r\n    <div className='info-list'>\r\n      <div className='caption-container'><WiUmbrella />{weatherData ? weatherData.description : '-'}</div>\r\n      <div><WiThermometer />{weatherData ? weatherData.max : 0}°C</div>\r\n      <div><WiThermometerExterior />{weatherData ? weatherData.min : 0}°C</div>\r\n      <div><WiStrongWind />{weatherData ? weatherData.wind_speed : 0} Km/h</div>\r\n      <div><WiHumidity />{weatherData ? weatherData.humidity : 0}%</div>\r\n    </div>\r\n    <div className='graph-layout'>\r\n      <LineChart data={weatherData && weatherData.graphData} />\r\n    </div>\r\n  </ContentLayout >\r\n};\r\n\r\nconst ContentLayout = styled.div`\r\n  height:100%;\r\n  display:flex;\r\n  align-items: center;\r\n  flex-wrap:wrap;\r\n  justify-content: center;\r\n\r\n  .graph-layout{\r\n    min-width:50%;\r\n  }\r\n\r\n  .current-container{\r\n    color:#F2542D;\r\n    font-weight:bold;\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content:space-between;\r\n    align-items:center;\r\n    min-width:30%;\r\n    height:18rem;\r\n  }\r\n\r\n  .current-temp{\r\n    font-size: 2rem;\r\n  }\r\n\r\n  .current-date{\r\n    font-size: 1.5rem;\r\n    text-transform: capitalize;\r\n  }\r\n\r\n  .info-list{\r\n    min-width: 20%;\r\n    height:18rem;\r\n    font-size: 1.5rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    div{\r\n      display:flex;\r\n      align-items:center;\r\n    }\r\n    svg{\r\n      margin-right:1rem;\r\n    }\r\n  }\r\n\r\n  .caption-container{\r\n    text-transform:capitalize;\r\n  }\r\n\r\n  @media (max-width: 1000px) {\r\n    .graph-layout{\r\n      min-width:100%;\r\n    }\r\n  }\r\n\r\n  @media (min-width: 1001px) {\r\n    .graph-layout{\r\n      width:50%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default CurrentWeather;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n//icons\r\nimport { WiThermometer, WiThermometerExterior, WiStrongWind, WiHumidity } from 'react-icons/wi'\r\n\r\nconst WeatherDay = props => {\r\n  const { icon, humidity, max, min, wind_speed, date } = props\r\n  return <ContentLayout>\r\n    <div className='date-layout'>{date || '-'}</div>\r\n    <div className='data-container'>\r\n      < img\r\n        src={`http://openweathermap.org/img/wn/${icon || '01n'}@2x.png`}\r\n        alt='Icono del clima'\r\n        className='img-layout'\r\n      />\r\n      <div className='measures-layout'>\r\n        <div className='max-layout'><WiThermometer />{max || '-'}°C</div>\r\n        <div className='min-layout'><WiThermometerExterior />{min || '-'}°C</div>\r\n        <div className='humidity-layout'><WiStrongWind />{humidity || '-'}%</div>\r\n        <div className='wind_speed-layout'><WiHumidity />{wind_speed || '-'} Km/h</div>\r\n      </div>\r\n    </div>\r\n  </ContentLayout>\r\n};\r\n\r\nconst ContentLayout = styled.div`\r\n  min-width:13rem;\r\n  \r\n  .img-layout{\r\n    flex:1;\r\n  }\r\n\r\n  .measures-layout{\r\n    flex:1;\r\n  }\r\n\r\n  .date-layout{\r\n    text-transform:capitalize;\r\n    font-weight:bold;\r\n    text-align:center;\r\n  }\r\n\r\n  .data-container{\r\n    display:flex;\r\n    align-items: center;\r\n    svg{\r\n      margin-right:.5rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default WeatherDay;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n//compoents\r\nimport WeatherDay from './WeatherDay'\r\n\r\nconst ExtendedForecast = props => {\r\n  const { weatherData } = props\r\n  return <ContentLayout>\r\n    {\r\n      weatherData && weatherData.map((dayData, i) => <WeatherDay key={i} {...dayData} />)\r\n    }\r\n  </ContentLayout>\r\n};\r\n\r\nconst ContentLayout = styled.div`\r\n  display:flex;\r\n  overflow:auto;\r\n`;\r\n\r\nexport default ExtendedForecast;\r\n","import moment from 'moment';\r\n\r\n//moment lang config\r\nimport 'moment/locale/es'\r\nmoment.locale('es')\r\n\r\nexport const formatedTime = date => moment.unix(date).format('dddd DD MMMM')\r\n\r\nexport const formatedHourlyGraphTime = date => moment.unix(date).format('hh')","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useMediaLayout } from 'use-media';\r\n//get data endpoints\r\nimport { getWeatherData } from '../apiRequest/WeatherData';\r\n//components\r\nimport ContentCard from '../components/common/ContentCard';\r\nimport Dropdown from '../components/common/Dropdown';\r\nimport CurrentWeather from '../components/currentWeather/CurrentWeather';\r\nimport ExtendedForecast from '../components/extendedForecast/ExtendedForecast';\r\n//utils\r\nimport { formatedTime, formatedHourlyGraphTime } from '../utils/timeHandlers';\r\n\r\nconst WeatherView = () => {\r\n  const [locationWeather, setLocationWeather] = useState(null)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [cityCoord, setCityCoord] = useState({ lat: -34.639239, lon: -58.504896 })\r\n  const isWide = useMediaLayout({ minWidth: 1000 });\r\n\r\n  useEffect(() => {\r\n    _getCurrentWeatherData()\r\n    console.log(\"WIDE\", isWide)\r\n  }, [cityCoord]);\r\n\r\n  const _getCurrentWeatherData = async () => {\r\n    setIsLoading(true)\r\n    const res = await getWeatherData(cityCoord)\r\n    setIsLoading(false)\r\n    //formateo y guardo la informacion en su estado correspondiente\r\n    const formatedCurrentData = {\r\n      current: formatCurrentWeatherData(res),\r\n      extended: formatExtendedWeatherData(res)\r\n    }\r\n    setLocationWeather(formatedCurrentData)\r\n  };\r\n\r\n  const formatCurrentWeatherData = data => {\r\n    const { dt, humidity, temp, wind_speed, weather } = data.current\r\n    const { max, min } = data.daily[0].temp\r\n    return {\r\n      date: formatedTime(dt),\r\n      humidity,\r\n      temp,\r\n      wind_speed,\r\n      icon: weather[0].icon,\r\n      description: weather[0].description,\r\n      max,\r\n      min,\r\n      graphData: formatGraphData(data.hourly.slice(0, 24))\r\n    }\r\n  }\r\n\r\n  const formatGraphData = data => {\r\n    const labels = data.map(item => formatedHourlyGraphTime(item.dt))\r\n    const dataset = data.map(item => item.temp)\r\n    return { labels, dataset }\r\n  }\r\n\r\n  const formatExtendedWeatherData = data => {\r\n    //cut the obsolete elements\r\n    const dailyData = [...data.daily].slice(1, 6)\r\n    const formatedData = dailyData.map((item, i) => {\r\n      const { dt, humidity, temp, wind_speed, weather } = item\r\n      return {\r\n        date: formatedTime(dt),\r\n        humidity,\r\n        min: temp.min,\r\n        max: temp.max,\r\n        wind_speed,\r\n        icon: weather[0].icon\r\n      }\r\n    })\r\n    return formatedData\r\n  }\r\n\r\n  const handleCityChange = cityCoord => {\r\n    setCityCoord(cityCoord)\r\n  }\r\n\r\n  return <ViewLayout>\r\n    <div className='header'>\r\n      <h2>Clima actual</h2>\r\n      <ContentCard isLoading={isLoading} className='drop-container'>\r\n        <div className='drop-label'>\r\n          Ubicación:\r\n        </div>\r\n        <Dropdown\r\n          initialValue=\"Buenos aires\"\r\n          handleChange={value => handleCityChange(value)}\r\n          items={[\r\n            { label: 'Montevideo', value: { lat: -34.8207362, lon: -56.3765246 } },\r\n            { label: 'Londres', value: { lat: -34.639239, lon: -0.3817841 } },\r\n            { label: 'Nueva York', value: { lat: 40.6643, lon: -73.9385 } },\r\n            { label: 'Tokio', value: { lat: 35.6894, lon: 139.692 } },\r\n            { label: 'Sydney', value: { lat: -33.8667, lon: 151.2 } },\r\n            { label: 'Buenos Aires', value: { lat: -34.639239, lon: -58.504896 } }\r\n          ]}\r\n        />\r\n      </ContentCard>\r\n    </div>\r\n    <ContentCard isLoading={isLoading} className='current-styles'>\r\n      <CurrentWeather weatherData={locationWeather && locationWeather.current} />\r\n    </ContentCard>\r\n    <div className='header'>\r\n      <h2>Pronostico extendido</h2>\r\n    </div>\r\n    <ContentCard isLoading={isLoading}>\r\n      <ExtendedForecast weatherData={locationWeather && locationWeather.extended} />\r\n    </ContentCard>\r\n  </ViewLayout>\r\n};\r\n\r\nconst ViewLayout = styled.div`\r\n  @import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');\r\n\r\n  width:100%;\r\n  max-width:70rem;\r\n  margin: 1rem .5rem;\r\n  font-family: 'Roboto', sans-serif;\r\n  color:grey;\r\n\r\n  .header{\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:space-between;\r\n    h2{\r\n      margin:1rem 0;\r\n\r\n    }\r\n  }\r\n\r\n  .current-styles{\r\n    min-height: 17rem;\r\n  }\r\n\r\n  .drop-container{\r\n    padding: .2rem .5rem;\r\n    display:flex;\r\n    align-items:center;\r\n    .drop-label{\r\n      margin-right:.5rem;\r\n      font-weight:bold;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 1000px) {\r\n    .header{\r\n      flex-direction: column;\r\n      margin-bottom:1rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default WeatherView;\r\n","const myApiKey = '6807cadafaf85785dd46ad1417d1e9e7';\r\n\r\n// get weather data\r\nexport const getWeatherData = coord => {\r\n  return fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${coord.lat}&lon=${coord.lon}&appid=${myApiKey}&units=metric&lang=es`)\r\n    .then(res => res.json())\r\n};\r\n","import React from 'react';\nimport styled from 'styled-components';\n//view components\nimport WeatherView from './views/WeatherView';\n\nconst App = () => {\n  return <AppLayout className=\"App\">\n    <WeatherView />\n  </AppLayout>\n};\n\nconst AppLayout = styled.div`\n  background-color: whitesmoke;\n  width: 100%;\n  height:100vh;\n  display: flex;\n  justify-content: center;\n`;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}